# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: trade_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import trade_data_pb2 as trade__data__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='trade_service.proto',
  package='balance',
  syntax='proto3',
  serialized_pb=_b('\n\x13trade_service.proto\x12\x07\x62\x61lance\x1a\x10trade_data.proto\"6\n\x15OrderNewSingleRequest\x12\x1d\n\x05order\x18\x01 \x01(\x0b\x32\x0e.balance.Order\"[\n\x17OrderAmendSingleRequest\x12\x1d\n\x05order\x18\x01 \x01(\x0b\x32\x0e.balance.Order\x12!\n\told_order\x18\x02 \x01(\x0b\x32\x0e.balance.Order\"\\\n\x18OrderCancelSingleRequest\x12\x1d\n\x05order\x18\x01 \x01(\x0b\x32\x0e.balance.Order\x12!\n\told_order\x18\x02 \x01(\x0b\x32\x0e.balance.Order\"K\n\x13\x41\x63\x63ountAssetRequest\x12#\n\x06market\x18\x01 \x01(\x0e\x32\x13.balance.EnumMarket\x12\x0f\n\x07\x61\x63\x63ount\x18\x02 \x01(\t\"O\n\x17\x41\x63\x63ountOrderListRequest\x12#\n\x06market\x18\x01 \x01(\x0e\x32\x13.balance.EnumMarket\x12\x0f\n\x07\x61\x63\x63ount\x18\x02 \x01(\t2\xf7\x02\n\x05Trade\x12\x42\n\x0eorderNewSingle\x12\x1e.balance.OrderNewSingleRequest\x1a\x0e.balance.Order\"\x00\x12\x46\n\x10orderAmendSingle\x12 .balance.OrderAmendSingleRequest\x1a\x0e.balance.Order\"\x00\x12H\n\x11orderCancelSingle\x12!.balance.OrderCancelSingleRequest\x1a\x0e.balance.Order\"\x00\x12\x45\n\x0c\x61\x63\x63ountAsset\x12\x1c.balance.AccountAssetRequest\x1a\x15.balance.AccountAsset\"\x00\x12Q\n\x10\x61\x63\x63ountOrderList\x12 .balance.AccountOrderListRequest\x1a\x19.balance.AccountOrderList\"\x00\x62\x06proto3')
  ,
  dependencies=[trade__data__pb2.DESCRIPTOR,])




_ORDERNEWSINGLEREQUEST = _descriptor.Descriptor(
  name='OrderNewSingleRequest',
  full_name='balance.OrderNewSingleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='order', full_name='balance.OrderNewSingleRequest.order', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=104,
)


_ORDERAMENDSINGLEREQUEST = _descriptor.Descriptor(
  name='OrderAmendSingleRequest',
  full_name='balance.OrderAmendSingleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='order', full_name='balance.OrderAmendSingleRequest.order', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='old_order', full_name='balance.OrderAmendSingleRequest.old_order', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=106,
  serialized_end=197,
)


_ORDERCANCELSINGLEREQUEST = _descriptor.Descriptor(
  name='OrderCancelSingleRequest',
  full_name='balance.OrderCancelSingleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='order', full_name='balance.OrderCancelSingleRequest.order', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='old_order', full_name='balance.OrderCancelSingleRequest.old_order', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=199,
  serialized_end=291,
)


_ACCOUNTASSETREQUEST = _descriptor.Descriptor(
  name='AccountAssetRequest',
  full_name='balance.AccountAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='market', full_name='balance.AccountAssetRequest.market', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='account', full_name='balance.AccountAssetRequest.account', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=293,
  serialized_end=368,
)


_ACCOUNTORDERLISTREQUEST = _descriptor.Descriptor(
  name='AccountOrderListRequest',
  full_name='balance.AccountOrderListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='market', full_name='balance.AccountOrderListRequest.market', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='account', full_name='balance.AccountOrderListRequest.account', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=370,
  serialized_end=449,
)

_ORDERNEWSINGLEREQUEST.fields_by_name['order'].message_type = trade__data__pb2._ORDER
_ORDERAMENDSINGLEREQUEST.fields_by_name['order'].message_type = trade__data__pb2._ORDER
_ORDERAMENDSINGLEREQUEST.fields_by_name['old_order'].message_type = trade__data__pb2._ORDER
_ORDERCANCELSINGLEREQUEST.fields_by_name['order'].message_type = trade__data__pb2._ORDER
_ORDERCANCELSINGLEREQUEST.fields_by_name['old_order'].message_type = trade__data__pb2._ORDER
_ACCOUNTASSETREQUEST.fields_by_name['market'].enum_type = trade__data__pb2._ENUMMARKET
_ACCOUNTORDERLISTREQUEST.fields_by_name['market'].enum_type = trade__data__pb2._ENUMMARKET
DESCRIPTOR.message_types_by_name['OrderNewSingleRequest'] = _ORDERNEWSINGLEREQUEST
DESCRIPTOR.message_types_by_name['OrderAmendSingleRequest'] = _ORDERAMENDSINGLEREQUEST
DESCRIPTOR.message_types_by_name['OrderCancelSingleRequest'] = _ORDERCANCELSINGLEREQUEST
DESCRIPTOR.message_types_by_name['AccountAssetRequest'] = _ACCOUNTASSETREQUEST
DESCRIPTOR.message_types_by_name['AccountOrderListRequest'] = _ACCOUNTORDERLISTREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

OrderNewSingleRequest = _reflection.GeneratedProtocolMessageType('OrderNewSingleRequest', (_message.Message,), dict(
  DESCRIPTOR = _ORDERNEWSINGLEREQUEST,
  __module__ = 'trade_service_pb2'
  # @@protoc_insertion_point(class_scope:balance.OrderNewSingleRequest)
  ))
_sym_db.RegisterMessage(OrderNewSingleRequest)

OrderAmendSingleRequest = _reflection.GeneratedProtocolMessageType('OrderAmendSingleRequest', (_message.Message,), dict(
  DESCRIPTOR = _ORDERAMENDSINGLEREQUEST,
  __module__ = 'trade_service_pb2'
  # @@protoc_insertion_point(class_scope:balance.OrderAmendSingleRequest)
  ))
_sym_db.RegisterMessage(OrderAmendSingleRequest)

OrderCancelSingleRequest = _reflection.GeneratedProtocolMessageType('OrderCancelSingleRequest', (_message.Message,), dict(
  DESCRIPTOR = _ORDERCANCELSINGLEREQUEST,
  __module__ = 'trade_service_pb2'
  # @@protoc_insertion_point(class_scope:balance.OrderCancelSingleRequest)
  ))
_sym_db.RegisterMessage(OrderCancelSingleRequest)

AccountAssetRequest = _reflection.GeneratedProtocolMessageType('AccountAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _ACCOUNTASSETREQUEST,
  __module__ = 'trade_service_pb2'
  # @@protoc_insertion_point(class_scope:balance.AccountAssetRequest)
  ))
_sym_db.RegisterMessage(AccountAssetRequest)

AccountOrderListRequest = _reflection.GeneratedProtocolMessageType('AccountOrderListRequest', (_message.Message,), dict(
  DESCRIPTOR = _ACCOUNTORDERLISTREQUEST,
  __module__ = 'trade_service_pb2'
  # @@protoc_insertion_point(class_scope:balance.AccountOrderListRequest)
  ))
_sym_db.RegisterMessage(AccountOrderListRequest)



_TRADE = _descriptor.ServiceDescriptor(
  name='Trade',
  full_name='balance.Trade',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=452,
  serialized_end=827,
  methods=[
  _descriptor.MethodDescriptor(
    name='orderNewSingle',
    full_name='balance.Trade.orderNewSingle',
    index=0,
    containing_service=None,
    input_type=_ORDERNEWSINGLEREQUEST,
    output_type=trade__data__pb2._ORDER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='orderAmendSingle',
    full_name='balance.Trade.orderAmendSingle',
    index=1,
    containing_service=None,
    input_type=_ORDERAMENDSINGLEREQUEST,
    output_type=trade__data__pb2._ORDER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='orderCancelSingle',
    full_name='balance.Trade.orderCancelSingle',
    index=2,
    containing_service=None,
    input_type=_ORDERCANCELSINGLEREQUEST,
    output_type=trade__data__pb2._ORDER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='accountAsset',
    full_name='balance.Trade.accountAsset',
    index=3,
    containing_service=None,
    input_type=_ACCOUNTASSETREQUEST,
    output_type=trade__data__pb2._ACCOUNTASSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='accountOrderList',
    full_name='balance.Trade.accountOrderList',
    index=4,
    containing_service=None,
    input_type=_ACCOUNTORDERLISTREQUEST,
    output_type=trade__data__pb2._ACCOUNTORDERLIST,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TRADE)

DESCRIPTOR.services_by_name['Trade'] = _TRADE

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class TradeStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.orderNewSingle = channel.unary_unary(
          '/balance.Trade/orderNewSingle',
          request_serializer=OrderNewSingleRequest.SerializeToString,
          response_deserializer=trade__data__pb2.Order.FromString,
          )
      self.orderAmendSingle = channel.unary_unary(
          '/balance.Trade/orderAmendSingle',
          request_serializer=OrderAmendSingleRequest.SerializeToString,
          response_deserializer=trade__data__pb2.Order.FromString,
          )
      self.orderCancelSingle = channel.unary_unary(
          '/balance.Trade/orderCancelSingle',
          request_serializer=OrderCancelSingleRequest.SerializeToString,
          response_deserializer=trade__data__pb2.Order.FromString,
          )
      self.accountAsset = channel.unary_unary(
          '/balance.Trade/accountAsset',
          request_serializer=AccountAssetRequest.SerializeToString,
          response_deserializer=trade__data__pb2.AccountAsset.FromString,
          )
      self.accountOrderList = channel.unary_unary(
          '/balance.Trade/accountOrderList',
          request_serializer=AccountOrderListRequest.SerializeToString,
          response_deserializer=trade__data__pb2.AccountOrderList.FromString,
          )


  class TradeServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def orderNewSingle(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def orderAmendSingle(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def orderCancelSingle(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def accountAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def accountOrderList(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_TradeServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'orderNewSingle': grpc.unary_unary_rpc_method_handler(
            servicer.orderNewSingle,
            request_deserializer=OrderNewSingleRequest.FromString,
            response_serializer=trade__data__pb2.Order.SerializeToString,
        ),
        'orderAmendSingle': grpc.unary_unary_rpc_method_handler(
            servicer.orderAmendSingle,
            request_deserializer=OrderAmendSingleRequest.FromString,
            response_serializer=trade__data__pb2.Order.SerializeToString,
        ),
        'orderCancelSingle': grpc.unary_unary_rpc_method_handler(
            servicer.orderCancelSingle,
            request_deserializer=OrderCancelSingleRequest.FromString,
            response_serializer=trade__data__pb2.Order.SerializeToString,
        ),
        'accountAsset': grpc.unary_unary_rpc_method_handler(
            servicer.accountAsset,
            request_deserializer=AccountAssetRequest.FromString,
            response_serializer=trade__data__pb2.AccountAsset.SerializeToString,
        ),
        'accountOrderList': grpc.unary_unary_rpc_method_handler(
            servicer.accountOrderList,
            request_deserializer=AccountOrderListRequest.FromString,
            response_serializer=trade__data__pb2.AccountOrderList.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'balance.Trade', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaTradeServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def orderNewSingle(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def orderAmendSingle(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def orderCancelSingle(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def accountAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def accountOrderList(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaTradeStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def orderNewSingle(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    orderNewSingle.future = None
    def orderAmendSingle(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    orderAmendSingle.future = None
    def orderCancelSingle(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    orderCancelSingle.future = None
    def accountAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    accountAsset.future = None
    def accountOrderList(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    accountOrderList.future = None


  def beta_create_Trade_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('balance.Trade', 'accountAsset'): AccountAssetRequest.FromString,
      ('balance.Trade', 'accountOrderList'): AccountOrderListRequest.FromString,
      ('balance.Trade', 'orderAmendSingle'): OrderAmendSingleRequest.FromString,
      ('balance.Trade', 'orderCancelSingle'): OrderCancelSingleRequest.FromString,
      ('balance.Trade', 'orderNewSingle'): OrderNewSingleRequest.FromString,
    }
    response_serializers = {
      ('balance.Trade', 'accountAsset'): trade__data__pb2.AccountAsset.SerializeToString,
      ('balance.Trade', 'accountOrderList'): trade__data__pb2.AccountOrderList.SerializeToString,
      ('balance.Trade', 'orderAmendSingle'): trade__data__pb2.Order.SerializeToString,
      ('balance.Trade', 'orderCancelSingle'): trade__data__pb2.Order.SerializeToString,
      ('balance.Trade', 'orderNewSingle'): trade__data__pb2.Order.SerializeToString,
    }
    method_implementations = {
      ('balance.Trade', 'accountAsset'): face_utilities.unary_unary_inline(servicer.accountAsset),
      ('balance.Trade', 'accountOrderList'): face_utilities.unary_unary_inline(servicer.accountOrderList),
      ('balance.Trade', 'orderAmendSingle'): face_utilities.unary_unary_inline(servicer.orderAmendSingle),
      ('balance.Trade', 'orderCancelSingle'): face_utilities.unary_unary_inline(servicer.orderCancelSingle),
      ('balance.Trade', 'orderNewSingle'): face_utilities.unary_unary_inline(servicer.orderNewSingle),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Trade_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('balance.Trade', 'accountAsset'): AccountAssetRequest.SerializeToString,
      ('balance.Trade', 'accountOrderList'): AccountOrderListRequest.SerializeToString,
      ('balance.Trade', 'orderAmendSingle'): OrderAmendSingleRequest.SerializeToString,
      ('balance.Trade', 'orderCancelSingle'): OrderCancelSingleRequest.SerializeToString,
      ('balance.Trade', 'orderNewSingle'): OrderNewSingleRequest.SerializeToString,
    }
    response_deserializers = {
      ('balance.Trade', 'accountAsset'): trade__data__pb2.AccountAsset.FromString,
      ('balance.Trade', 'accountOrderList'): trade__data__pb2.AccountOrderList.FromString,
      ('balance.Trade', 'orderAmendSingle'): trade__data__pb2.Order.FromString,
      ('balance.Trade', 'orderCancelSingle'): trade__data__pb2.Order.FromString,
      ('balance.Trade', 'orderNewSingle'): trade__data__pb2.Order.FromString,
    }
    cardinalities = {
      'accountAsset': cardinality.Cardinality.UNARY_UNARY,
      'accountOrderList': cardinality.Cardinality.UNARY_UNARY,
      'orderAmendSingle': cardinality.Cardinality.UNARY_UNARY,
      'orderCancelSingle': cardinality.Cardinality.UNARY_UNARY,
      'orderNewSingle': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'balance.Trade', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
